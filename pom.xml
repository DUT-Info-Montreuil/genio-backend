<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <!-- Application. -->
    <groupId>com.genio.service</groupId>
    <artifactId>GenioService</artifactId>
    <version>1.0.0-RELEASE</version>
    <!--Attention on génére un WAR donc il faut lancer un mvn spring-boot:run pour lancer -->
    <packaging>war</packaging>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.12</version>
        <relativePath/>
    </parent>

    <!-- Nom et description de l'application. -->
    <name>GenioService</name>
    <description>GenioService Application de gestion des conventions</description>
    <url>https://lilmod-lelamed.fr/genioService</url>
    <inceptionYear>2025</inceptionYear>

    <!-- Organisation. -->
    <organization>
        <name>GenioService</name>
        <url>https://lilmod-lelamed.fr</url>
    </organization>

    <!-- Licences. -->
    <licenses>
        <license>
        <name>CreativeCommonC</name>
        <url>https://creativecommons.org/licenses/by-nc-sa/4.0/deed.fr</url>
        </license>
    </licenses>

    <!-- Les developers. -->
    <developers>
        <developer>
        <id>ehadjadj</id>
        <name>Elsa Hadjadj</name>
        <email>elsa.simha.hadjadj@gmail.com</email>
        <timezone>Europe/Paris</timezone>
        </developer>
    </developers>

    <!-- Les contributeurs. -->
    <contributors>
        <contributor>
        <name>Elsa HADJADJ</name>
        <email>elsa.simha.hadjadj@gmail.com</email>
        <organization>Lilmod-lelamed</organization>
        <organizationUrl>https://lilmod-lelalmed.fr</organizationUrl>
        <roles>
            <role>designer</role>
            <role>developer</role>
            <role>tester</role>
            <role>documentation</role>
        </roles>
        <timezone>Europe/Paris</timezone>
        </contributor>
    </contributors>

    <!-- ***** Github ***** -->
    <scm>
        <url>https://github.com/DUT-Info-Montreuil/GenioService.git</url>
        <connection>scm:git:https://github.com/DUT-Info-Montreuil/GenioService.git</connection>
        <developerConnection>scm:git:https://github.com/DUT-Info-Montreuil/GenioService.git</developerConnection>
        <tag>develop</tag>
    </scm>

    <!-- Liste des proprietes maven. -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>17</java.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>

        <mockito.inline.mockmaker>false</mockito.inline.mockmaker>

        <!-- Version des dépendances -->
        <spring-core.version>6.1.6</spring-core.version>
        <jakarta.mail.version>2.0.3</jakarta.mail.version>
        <jakarta.mail-api.version>2.1.3</jakarta.mail-api.version>
        <jakarta.validation-api.version>3.0.2</jakarta.validation-api.version>
        <hibernate-validator.version>8.0.2.Final</hibernate-validator.version>
        <log4j2.version>2.24.3</log4j2.version>
        <poi.version>5.4.0</poi.version>
        <mysql.version>9.0.0</mysql.version>
        <lombok.version>1.18.38</lombok.version>
        <byte-buddy.version>1.17.5</byte-buddy.version>

        <h2.version>2.2.220</h2.version>
        <mockito.version>5.7.0</mockito.version>
        <swagger-ui.version>2.5.0</swagger-ui.version>
        <jacoco.version>0.8.8</jacoco.version>
    </properties>

    <dependencies>
        <!-- Utilisation de la base H2 pour les tests -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- Gestion des dépendances Spring-Boot. -->
        <!-- Serveur Web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-to-slf4j</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- serveur de messagerie -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <!-- sécurité -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <!-- base de données -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <!-- exceptions et contrôles -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <!-- journaux et traces -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
        <!-- tests -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
        </dependency>

        <!-- Dépendances tierces -->
        <!-- Messagerie -->
        <!-- Jakarta Validation pour @NotBlank, @Pattern, etc. -->
        <dependency>
            <groupId>org.eclipse.angus</groupId>
            <artifactId>jakarta.mail</artifactId>
            <version>${jakarta.mail.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <version>${jakarta.validation-api.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.mail</groupId>
            <artifactId>jakarta.mail-api</artifactId>
            <version>${jakarta.mail-api.version}</version>
        </dependency>


        <!-- Gestion des journaux et des traces -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j2.version}</version>
        </dependency>

        <!-- Swagger pour documentation API -->
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${swagger-ui.version}</version>
        </dependency>

        <!-- Mysql jdbc-->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <version>${mysql.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>${hibernate-validator.version}</version>
        </dependency>

        <!-- gestion des tests -->
        <dependency>
            <!-- bouchons -->
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- contexte de sécurité -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- gestion des fichiers microsoft -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>${poi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>${poi.version}</version>
        </dependency>

        <!-- Lombok pour annotations @Getter, @Setter, etc. -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- gestion de la JVM -->
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy-agent</artifactId>
            <version>${byte-buddy.version}</version>
        </dependency>

        <!-- tomcat pour springboot -->
        <dependency>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
          <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <jvmArguments>
                        -XX:+EnableDynamicAgentLoading
                    </jvmArguments>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
